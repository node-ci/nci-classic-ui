mixin statusText(build)
	if build.status === 'in-progress'
		span in progress

	if build.status === 'queued'
		span queued

	if build.status === 'done'
		span done

	if build.status === 'error'
		span error

	if build.status === 'canceled'
		span canceled

- var build = this.props.build;

.builds_item(class="builds_item__#{build.status}")
	.builds_inner
		.row
			.builds_header
				if build.project
					span
						Scm(scm=build.project.scm.type)
						| 
						Link(to="project", params={name: build.project.name})
							span= build.project.name
					| 
				if build.number
					span(style={fontSize: '15px', color: '#a6a6a6'}) build
					| 
					if build.status !== 'queued'
						Link(to="build", params={id: build.id})
							span #
							span= build.number
					else
							span #
							span= build.number

				if build.waitReason
					span(title=build.waitReason)  (waiting for a node)

				if build.status === 'in-progress' && build.currentStep
					span  (
					span= build.currentStep
					span )

			.builds_controls
				if build.status === 'in-progress'
					.builds_progress
						if build.project.avgBuildDuration
							Progress(build=build)

				if build.status === 'queued' || build.status === 'in-progress'
					.builds_buttons
						a.btn.btn-sm.btn-default(href="javascript:void(0);", onClick=this.onCancelBuild(build.id))
							i.fa.fa-fw.fa-times(title="Cancel build")
							| 
							| Cancel build

		.builds_content
			if build.endDate
				span.builds_info
					i.fa.fa-fw.fa-clock-o
					| finished 
					DateTime(value=build.endDate)
					| , took
					| 
					Duration(value=(build.endDate - build.startDate))
			else
				if build.startDate
					span.builds_info
						i.fa.fa-fw.fa-clock-o
						| started 
						DateTime(value=build.startDate)
				else
					span.builds_info
						i.fa.fa-fw.fa-clock-o
						| queued 
						DateTime(value=build.createDate)
			| 
			if build.scm
				span.builds_info
					i.fa.fa-fw.fa-comment-o
					| 
					span= utils.prune(build.scm.rev.comment, 40)
